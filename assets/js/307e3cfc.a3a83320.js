"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1513],{9734:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"setup-and-configuration","title":"Setup and Configuration Guide","description":"This guide provides detailed instructions for setting up, configuring, and running the Push Notification Service on your local or production environment.","source":"@site/docs/setup-and-configuration.md","sourceDirName":".","slug":"/setup-and-configuration","permalink":"/push-notification-service/docs/setup-and-configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/your-username/push-notification-service/tree/main/website/docs/setup-and-configuration.md","tags":[],"version":"current","frontMatter":{"id":"setup-and-configuration","title":"Setup and Configuration Guide","sidebar_label":"Setup Guide"},"sidebar":"docsSidebar","previous":{"title":"Implementation Status","permalink":"/push-notification-service/docs/implementation-status"},"next":{"title":"Database Seeder","permalink":"/push-notification-service/docs/database-seeder"}}');var r=s(4848),c=s(8453);const l={id:"setup-and-configuration",title:"Setup and Configuration Guide",sidebar_label:"Setup Guide"},t="Push Notification Service Setup Guide",o={},a=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Environment Configuration",id:"environment-configuration",level:2},{value:"Database Setup",id:"database-setup",level:2},{value:"Running the Service",id:"running-the-service",level:2},{value:"Development Mode",id:"development-mode",level:3},{value:"Production Mode",id:"production-mode",level:3},{value:"Starting Specific Components",id:"starting-specific-components",level:3},{value:"Docker Deployment",id:"docker-deployment",level:2},{value:"Running with Docker Compose",id:"running-with-docker-compose",level:3},{value:"Container Services",id:"container-services",level:3},{value:"Accessing Service UIs",id:"accessing-service-uis",level:3},{value:"Testing",id:"testing",level:2},{value:"API Testing",id:"api-testing",level:3},{value:"WebSocket Testing",id:"websocket-testing",level:3},{value:"Production Considerations",id:"production-considerations",level:2},{value:"Security",id:"security",level:3},{value:"Scaling",id:"scaling",level:3},{value:"Monitoring",id:"monitoring",level:3},{value:"Backup and Recovery",id:"backup-and-recovery",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Service Connection Issues",id:"service-connection-issues",level:3},{value:"Database Issues",id:"database-issues",level:3},{value:"RabbitMQ Issues",id:"rabbitmq-issues",level:3},{value:"Common Error Solutions",id:"common-error-solutions",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"push-notification-service-setup-guide",children:"Push Notification Service Setup Guide"})}),"\n",(0,r.jsx)(n.p,{children:"This guide provides detailed instructions for setting up, configuring, and running the Push Notification Service on your local or production environment."}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsx)(n.p,{children:"Before you begin, ensure you have the following installed:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Node.js:"})," Version 16.x or later"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"npm:"})," Version 8.x or later"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Docker & Docker Compose:"})," For containerized deployment"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PostgreSQL client"})," (optional): For direct database access"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Clone the repository:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/yourusername/push-notification-service.git\ncd push-notification-service\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Install dependencies:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"environment-configuration",children:"Environment Configuration"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Create environment file:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cp .env.example .env\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Configure environment variables:"})}),"\n",(0,r.jsxs)(n.p,{children:["Edit the ",(0,r.jsx)(n.code,{children:".env"})," file with your specific settings:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Server Configuration\nPORT=3000\nNODE_ENV=development\n\n# Database\nDB_HOST=localhost\nDB_PORT=5432\nDB_NAME=notification_db\nDB_USER=admin\nDB_PASSWORD=admin123\n\n# Redis\nREDIS_HOST=localhost\nREDIS_PORT=6379\n\n# RabbitMQ\nRABBITMQ_HOST=localhost\nRABBITMQ_PORT=5672\nRABBITMQ_USER=admin\nRABBITMQ_PASSWORD=admin123\n\n# Logging\nLOG_LEVEL=info\n"})}),"\n",(0,r.jsx)(n.p,{children:"For development with Docker Compose, use the service names as hosts:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"DB_HOST=postgres\nREDIS_HOST=redis\nRABBITMQ_HOST=rabbitmq\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"database-setup",children:"Database Setup"}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart TD\n    Start[Start] --\x3e Choice{Setup Method}\n    Choice --\x3e|Docker| DockerSetup[Use Docker Compose]\n    Choice --\x3e|Manual| ManualSetup[Use PostgreSQL Client]\n    \n    DockerSetup --\x3e RunDocker[Run docker-compose up -d postgres]\n    RunDocker --\x3e InitScripts[Scripts run automatically]\n    InitScripts --\x3e Complete[Database Ready]\n    \n    ManualSetup --\x3e RunSQL[Run SQL initialization script]\n    RunSQL --\x3e Complete"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Using Docker Compose (Recommended):"})}),"\n",(0,r.jsx)(n.p,{children:"Run PostgreSQL container with pre-configured initialization scripts:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose up -d postgres\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The initialization scripts in the ",(0,r.jsx)(n.code,{children:"init-scripts"})," directory will automatically create the required tables."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Manual Setup:"})}),"\n",(0,r.jsx)(n.p,{children:"If you're using an existing PostgreSQL instance:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"psql -U your_username -d your_database -f init-scripts/01-init.sql\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"running-the-service",children:"Running the Service"}),"\n",(0,r.jsx)(n.h3,{id:"development-mode",children:"Development Mode"}),"\n",(0,r.jsx)(n.p,{children:"Run the service in development mode with auto-restart on file changes:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run dev\n"})}),"\n",(0,r.jsx)(n.h3,{id:"production-mode",children:"Production Mode"}),"\n",(0,r.jsx)(n.p,{children:"For production environments:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm start\n"})}),"\n",(0,r.jsx)(n.h3,{id:"starting-specific-components",children:"Starting Specific Components"}),"\n",(0,r.jsx)(n.p,{children:"You can start individual components separately:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Start only the API server\nnode src/api/index.js\n\n# Start only the notification workers\nnode src/workers/index.js\n"})}),"\n",(0,r.jsx)(n.h2,{id:"docker-deployment",children:"Docker Deployment"}),"\n",(0,r.jsx)(n.p,{children:"The project includes Docker configuration for easy deployment of all required services."}),"\n",(0,r.jsx)(n.h3,{id:"running-with-docker-compose",children:"Running with Docker Compose"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Start all services:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose up -d\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Start only specific services:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose up -d postgres redis rabbitmq\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"View logs:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose logs -f\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Stop all services:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose down\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"container-services",children:"Container Services"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"docker-compose.yml"})," file defines the following services:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"postgres:"})," PostgreSQL database"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"redis:"})," Redis for caching and WebSocket state"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"rabbitmq:"})," RabbitMQ message broker"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"elasticsearch:"})," Part of ELK stack for logging"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"logstash:"})," Log processor"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"kibana:"})," Log visualization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"prometheus:"})," Metrics collection"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"grafana:"})," Metrics visualization"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"accessing-service-uis",children:"Accessing Service UIs"}),"\n",(0,r.jsx)(n.p,{children:"After starting the containers, you can access:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"RabbitMQ Management:"})," ",(0,r.jsx)(n.a,{href:"http://localhost:15672",children:"http://localhost:15672"})," (admin/admin123)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Kibana:"})," ",(0,r.jsx)(n.a,{href:"http://localhost:5601",children:"http://localhost:5601"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Prometheus:"})," ",(0,r.jsx)(n.a,{href:"http://localhost:9090",children:"http://localhost:9090"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Grafana:"})," ",(0,r.jsx)(n.a,{href:"http://localhost:3000",children:"http://localhost:3000"})," (admin/admin123)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,r.jsx)(n.h3,{id:"api-testing",children:"API Testing"}),"\n",(0,r.jsx)(n.p,{children:"You can test the API endpoints using tools like Postman or curl:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Test health endpoint\ncurl http://localhost:3000/api/health\n\n# Create a user\ncurl -X POST http://localhost:3000/api/users \\\n  -H "Content-Type: application/json" \\\n  -d \'{"email":"test@example.com","name":"Test User","phone":"+1234567890"}\'\n'})}),"\n",(0,r.jsx)(n.h3,{id:"websocket-testing",children:"WebSocket Testing"}),"\n",(0,r.jsxs)(n.p,{children:["To test WebSocket connections, you can use a tool like ",(0,r.jsx)(n.code,{children:"wscat"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Install wscat\nnpm install -g wscat\n\n# Connect to WebSocket server\nwscat -c ws://localhost:3000\n"})}),"\n",(0,r.jsx)(n.p,{children:"After connecting, authenticate:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{"event":"authenticate","data":{"userId":1}}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"production-considerations",children:"Production Considerations"}),"\n",(0,r.jsx)(n.h3,{id:"security",children:"Security"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"API Authentication:"})}),"\n",(0,r.jsx)(n.p,{children:"Implement a proper authentication mechanism, such as JWT tokens, API keys, or OAuth."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Environment Variables:"})}),"\n",(0,r.jsx)(n.p,{children:"Ensure all sensitive information is stored in environment variables, not in code."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"CORS Configuration:"})}),"\n",(0,r.jsxs)(n.p,{children:["Update the CORS settings in ",(0,r.jsx)(n.code,{children:"src/api/index.js"})," to restrict access to your domains."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Rate Limiting:"})}),"\n",(0,r.jsx)(n.p,{children:"Enable rate limiting for public endpoints to prevent abuse."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"scaling",children:"Scaling"}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart TD\n    API[API Service] --\x3e|Scale| API1[API Instance 1]\n    API --\x3e|Scale| API2[API Instance 2]\n    API --\x3e|Scale| API3[API Instance 3]\n    \n    Workers[Worker Service] --\x3e|Scale| Worker1[Worker Instance 1]\n    Workers --\x3e|Scale| Worker2[Worker Instance 2]\n    Workers --\x3e|Scale| Worker3[Worker Instance 3]\n    \n    API1 & API2 & API3 --\x3e RabbitMQ[RabbitMQ Cluster]\n    \n    RabbitMQ --\x3e Worker1 & Worker2 & Worker3\n    \n    DB[(PostgreSQL)] --\x3e API1 & API2 & API3\n    DB --\x3e ReadReplica[(Read Replica)]"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Horizontal Scaling:"})}),"\n",(0,r.jsx)(n.p,{children:"The service is designed to scale horizontally. You can run multiple instances behind a load balancer."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Database Scaling:"})}),"\n",(0,r.jsx)(n.p,{children:"For high-traffic scenarios, consider database read replicas and connection pooling."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Worker Scaling:"})}),"\n",(0,r.jsx)(n.p,{children:"You can run multiple worker instances to process notifications in parallel."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"monitoring",children:"Monitoring"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Set Up Alerts:"})}),"\n",(0,r.jsx)(n.p,{children:"Configure alerts in Prometheus/Grafana for key metrics:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"High error rates"}),"\n",(0,r.jsx)(n.li,{children:"Increased latency"}),"\n",(0,r.jsx)(n.li,{children:"Queue backlog growth"}),"\n",(0,r.jsx)(n.li,{children:"System resource usage"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Health Checks:"})}),"\n",(0,r.jsx)(n.p,{children:"Implement comprehensive health checks for each component."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"backup-and-recovery",children:"Backup and Recovery"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Database Backups:"})}),"\n",(0,r.jsx)(n.p,{children:"Set up regular PostgreSQL backups:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose exec postgres pg_dump -U admin notification_db > backup.sql\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Configuration Backups:"})}),"\n",(0,r.jsx)(n.p,{children:"Back up your environment configurations and any custom settings."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"service-connection-issues",children:"Service Connection Issues"}),"\n",(0,r.jsx)(n.p,{children:"If you encounter connection issues between services:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Check service status:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose ps\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Verify network connectivity:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose exec api ping postgres\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Check service logs:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose logs postgres\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"database-issues",children:"Database Issues"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Connection failures:"})}),"\n",(0,r.jsx)(n.p,{children:"Ensure the database is running and credentials are correct:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'docker-compose exec postgres psql -U admin -d notification_db -c "SELECT 1"\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Schema issues:"})}),"\n",(0,r.jsx)(n.p,{children:"Verify the database schema:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'docker-compose exec postgres psql -U admin -d notification_db -c "\\dt"\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"rabbitmq-issues",children:"RabbitMQ Issues"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Connection failures:"})}),"\n",(0,r.jsx)(n.p,{children:"Check RabbitMQ status:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose exec rabbitmq rabbitmqctl status\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Queue issues:"})}),"\n",(0,r.jsx)(n.p,{children:"List queues and their status:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose exec rabbitmq rabbitmqctl list_queues\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"common-error-solutions",children:"Common Error Solutions"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:'"ECONNREFUSED" errors:'})}),"\n",(0,r.jsx)(n.p,{children:"Usually indicates that a service isn't running or isn't accepting connections. Check the service status and logs."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:'"Authentication failed" errors:'})}),"\n",(0,r.jsxs)(n.p,{children:["Verify that the credentials in your ",(0,r.jsx)(n.code,{children:".env"})," file match those expected by the service."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:'Database "relation does not exist" errors:'})}),"\n",(0,r.jsx)(n.p,{children:"Ensure that the database initialization scripts have been run successfully."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsx)(n.p,{children:"After successfully setting up the Push Notification Service, you might want to:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Integrate with your application"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Add API calls to your backend"}),"\n",(0,r.jsx)(n.li,{children:"Implement WebSocket connections in your frontend"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Customize the service"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Add new notification channels"}),"\n",(0,r.jsx)(n.li,{children:"Extend the API with additional endpoints"}),"\n",(0,r.jsx)(n.li,{children:"Customize notification templates"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Set up CI/CD"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Automate testing and deployment"}),"\n",(0,r.jsx)(n.li,{children:"Set up staging and production environments"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);